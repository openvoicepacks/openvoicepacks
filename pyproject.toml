[project]
name = "openvoicepacks"
version = "0.1.0"
description = "Generate and customize complete voice packs for OpenTX and EdgeTX radios."
license = "MIT"
readme = "README.md"
authors = [
    { name = "Ben Fairless", email = "ben.fairless@gmail.com" }
]
classifiers = [
    "Development Status :: 2 - Pre-Alpha",
    "Environment :: Console",
    "Intended Audience :: Developers",
    "Natural Language :: English",
    "Operating System :: POSIX",
    "Programming Language :: Python :: 3",
    "Topic :: Communications :: Ham Radio",
    "Topic :: Multimedia :: Sound/Audio :: Speech",
    "Topic :: Software Development :: Libraries",
]
keywords = ["opentx", "edgetx", "tts", "voicepack", "radio", "fpv", "drone"]
requires-python = ">=3.13"
dependencies = [
    "boto3 (>=1.40.41,<2.0.0)",
    "coloredlogs (>=15.0.1,<16.0.0)",
    "pydub (>=0.25.1,<0.26.0)",
    "audioop-lts (>=0.2.2,<0.3.0)",
    "pydantic>=2.12.2",
    "pyyaml>=6.0.3",
    "piper-tts>=1.3.0",
    "jinja2>=3.1.6",
    "click>=8.3.0",
]

[dependency-groups]
dev = [
    "pytest (>=8.4.2,<9.0.0)",
    "pytest-cov (>=7.0.0,<8.0.0)",
    "pytest-spec (>=5.1.0,<6.0.0)",
    "python-magic (>=0.4.27,<0.5.0)",
    "invoke (>=2.2.0,<3.0.0)",
    "pre-commit>=4.3.0",
    "commitizen>=4.9.1",
    "ruff>=0.14.1",
]
docs = [
    "griffe-pydantic>=1.1.8",
    "mkdocs>=1.6.1",
    "mkdocs-autoapi>=0.4.1",
    "mkdocs-material[imaging]>=9.6.22",
    "mkdocs-mermaid2-plugin>=1.2.2",
    "mkdocs-minify-plugin>=0.8.0",
    "mkdocstrings>=0.30.1",
    "mkdocstrings-python>=1.18.2",
]
experimental = [
    "pytest-xdist (>=3.8.0,<4.0.0)",
    "peewee (>=3.18.2,<4.0.0)",
    "diff-cover>=9.7.1",
    "griffe-sphinx>=0.1.0", # Not sure if needed
    "mkdocs-material-extensions>=1.3.1",
]

[project.urls]
homepage = "https://openvoicepacks.org"
source = "https://github.com/openvoicepacks/opensoundpacks"
issues = "https://github.com/openvoicepacks/opensoundpacks/issues"

[project.scripts]
openvoicepacks = "openvoicepacks.client:ovp"

[build-system]
requires = ["uv_build>=0.8.22,<0.9.0"]
build-backend = "uv_build"

[tool.uv]
default-groups = ["dev"]

[tool.ruff]
line-length = 88
indent-width = 4
exclude = ["legacy/", "scratchpad.py", "tests_old/"]

[tool.ruff.format]
indent-style = "space"
quote-style = "double"
docstring-code-format = true

[tool.ruff.lint]
select = ["ALL"]
ignore = [
    "COM812", # Redundant trailing commas are added by formatter.
    "FIX001", "FIX002", # FIXME comments are useful.
    "TD001", "TD002", "TD003", # TODO comments are useful.
    "ERA001", # Will remove commented-out code eventually. It's useful for now.
    "EM101", # Allow string literals in excepts for now. Easier to read.
    "TRY003", # Allow long excepts for now. Easier to read.
    "D415", # Remove when module docstrings are improved.
]
unfixable = []
fixable = ["ALL"]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.per-file-ignores]
# Allow certain rules to be ignored in test files.
"tests/*.py" = [
    "S101", # Allow use of assert.
    "SLF001", # Allow access to private members.
    "PLR2004", # Allow magic values as they improve readability.
]

[tool.coverage.run]
branch = true
include = [
    "src/",
    "tests/",
]
omit = ["tasks.py"] # Omit invoke tasks as it would be circular.

[tool.coverage.report]
show_missing = true
skip_empty = true

[tool.pytest.ini_options]
testpaths = ["tests"]
spec_header_format = "[{path}]"
spec_test_format = "{result} {name} : {docstring_summary}"
addopts = "--spec --cov-report=xml --cov-report=term"
markers = ["slow: Marks tests as slow (deselect with '-m \"not slow\"')"]

[tool.commitizen]
name = "cz_conventional_commits"
tag_format = "$version"
version_scheme = "pep440"
version_provider = "uv"
update_changelog_on_bump = true
major_version_zero = true
